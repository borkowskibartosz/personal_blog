@register.filter
def is_new(added, days=7):
    days_new_deadline = timezone.now() - timezone.timedelta(days=days)
    return added > days_new_deadline

# use in template

<a {% with obj.added|is_new as is_new %}
  {% if is_new %}class="is_new newLeft"{% endif %}
{% endwith %} href="{% url 'app:view' pk %}">link</a>


        #s3boto
        # s3 = boto3.resource(
        #     's3',
        #     region_name='us-east-2',
        #     aws_access_key_id=settings.AWS_ACCESS_KEY_ID,
        #     aws_secret_access_key=settings.AWS_SECRET_ACCESS_KEY,
        # )

        # r = requests.get(url)
        # s3.Object(settings.AWS_STORAGE_BUCKET_NAME, f'{settings.MEDIAFILES_LOCATION}/{user.username}.jpg').put(Body=r.content)
        #/s3boto

        # s3.Bucket('bucketname').upload_file('/local/file/here.txt','folder/sub/path/to/s3key')
        #local
        # r = requests.get(url)
        # with open(settings.MEDIA_ROOT + f"/profile/{user.username}.jpg", "wb") as f:
        #     f.write(r.content)
        #/local
        # r = requests.get(url)
        # with open(settings.MEDIA_ROOT + f"/profile/{user.username}.jpg", "wb") as f:
        #     f.write(r.content)
        # user_profile = UserProfile.objects.get(user=user)
        # user_profile.avatar = f"/{user.username}.jpg"
        # user_profile.save()


        # user_profile = UserProfile.objects.get(user=user)
        # user_profile.avatar = f"/{user.username}.jpg"
        # user_profile.save()
